dist:     trusty    # используем Ubuntu 14.04 Trusty Tahr (а не 12.02 Precise Pangolin)
sudo:     required  # используем Virtual Machine (а не Docker container)

language: cpp       # на практике разницы между специфичным для C++ окружением
                    # и, скажем, python -- никакой. Но пусть будет cpp.

os:
    # будем прогонять CI и на Linux, и на Mac OS X...
    - linux
    - osx

compiler:
    # ... и с помощью GCC, и Clang
    - gcc
    - clang

env:
    # список переменных окружения, влияющих на матрицу сборки:
    - TARGET_CPU=amd64 BUILD_CONFIGURATION=Debug
    - TARGET_CPU=amd64 BUILD_CONFIGURATION=Release
    - TARGET_CPU=x86 BUILD_CONFIGURATION=Debug
    - TARGET_CPU=x86 BUILD_CONFIGURATION=Release

matrix:
    exclude:
        # вручную исключим ненужные элементы из матрицы сборки:
        - os:       osx
          compiler: gcc

        - os:  osx
          env: TARGET_CPU=x86 BUILD_CONFIGURATION=Debug

        - os:  osx
          env: TARGET_CPU=x86 BUILD_CONFIGURATION=Release

install:
    # скрипт настройки среды и установки зависимостей:
    - sudo apt-get update -q
    - sudo apt-get install cppcheck -y
    - sudo apt-get install python2.7 -y
    - sudo apt-get install valgrind -y
    - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
    - sudo apt-get update -q
    - sudo apt-get install g++-9 -y
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90
    - CMAKE_VERSION=3.15.4
    - CMAKE_VERSION_DIR=v3.15
    - CMAKE_OS=Linux-x86_64
    - CMAKE_TAR=cmake-$CMAKE_VERSION-$CMAKE_OS.tar.gz
    - https://vk.com/away.php?utf=1&to=http%3A%2F%2Fwww.cmake.org%2Ffiles%2F%24CMAKE_VERSION_DIR%2F%24CMAKE_TAR
    - CMAKE_DIR=$(pwd)/cmake-$CMAKE_VERSION
    - wget --quiet $CMAKE_URL
    - mkdir -p $CMAKE_DIR
    - tar --strip-components=1 -xzf $CMAKE_TAR -C $CMAKE_DIR
    - export PATH=$CMAKE_DIR/bin:$PATH

script:
    # скрипт сборки и тестирования проекта:
    - mkdir build
    - cd build
    - cmake ..
    - cmake --build .
    - valgrind --tool=memcheck ./main

deploy:
    # выкладываем tagged-коммиты на GitHub Releases:
    provider:     releases
    file:         <package-file>
    skip_cleanup: true
    overwrite:    true

    api_key:
        secure:   <encrypted-github-token>

    on:
        tags:     true
